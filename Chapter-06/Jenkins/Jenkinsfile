pipeline {
    agent any

    environment {
        BUILD_DIR = 'build'
        TARGET = 'firmware.elf'
        CROSS_COMPILER = 'arm-none-eabi-gcc'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Setup Build Directory') {
            steps {
                sh 'mkdir -p ${BUILD_DIR}'
            }
        }

        stage('Build') {
            steps {
                dir("${BUILD_DIR}") {
                    sh 'cmake .. -DCMAKE_TOOLCHAIN_FILE=../toolchain-arm.cmake'
                    sh 'make'
                }
            }
        }

        stage('Static Analysis') {
            steps {
                sh 'cppcheck --enable=all --inconclusive --quiet . || true'
            }
        }

        stage('Unit Tests') {
            steps {
                dir("${BUILD_DIR}") {
                    sh './run_tests'  // Assume unit tests are compiled as a host binary
                }
            }
        }

        stage('Archive Firmware') {
            steps {
                archiveArtifacts artifacts: "${BUILD_DIR}/${TARGET}", fingerprint: true
            }
        }

        stage('Post-Build Cleanup') {
            steps {
                sh 'rm -rf ${BUILD_DIR}'
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        failure {
            echo 'Build failed!'
        }
    }
}